# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run onname: scp copy folder to remote via SSH

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
      LOCAL: test
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup demo
        run: |
          mkdir test
          touch test/oof.txt
          touch test/.dot.txt
      - name: Copy folder content recursively to remote
        uses: ./
        with:
          local: test
          remote: scp/directory
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
      - name: Copy folder content recursively to remote (clean directory)
        uses: ./
        with:
          local: test
          remote: scp/directory
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
          rmRemote: true
          dotfiles: true   
      - name: Copy folder content recursively to remote (atomic put)
        uses: ./
        with:
          local: test
          remote: scp/atomic
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
          rmRemote: true
          dotfiles: true        
          atomicPut: true        
      - name: Copy single file to remote
        uses: ./
        with:
          local: test/oof.txt
          remote: scp/single/readme.md
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
      - name: Copy dotfile to remote
        uses: ./
        with:
          local: test/.dot.txt
          remote: scp/single/.dot.txt
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
          dotfiles: true
      - name: Copy with user/pw
        uses: ./
        with:
          local: test/oof.txt
          remote: scp/user/pw/oof.txt
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}     
      - name: With ENV
        uses: ./
        with:
          local: ${{ env.LOCAL }}
          remote: scp/directory
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY}}
          rmRemote: true
          dotfiles: true   
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
